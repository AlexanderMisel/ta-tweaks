diff --strip-trailing-cr -ruNa textadept_old/core/file_io.lua textadept/core/file_io.lua
--- textadept_old/core/file_io.lua	2018-10-25 11:02:25.000000000 +0800
+++ textadept/core/file_io.lua	2018-10-26 08:59:45.789135300 +0800
@@ -81,7 +81,7 @@
 -- @usage io.encodings[#io.encodings + 1] = 'UTF-32'
 -- @class table
 -- @name encodings
-io.encodings = {'UTF-8', 'ASCII', 'ISO-8859-1', 'UTF-16'}
+io.encodings = {'UTF-8', 'ASCII', 'ISO-8859-1', 'UTF-16', 'gbk' }
 
 ---
 -- Opens *filenames*, a string filename or list of filenames, or the
diff --strip-trailing-cr -ruNa textadept_old/lexers/css.lua textadept/lexers/css.lua
--- textadept_old/lexers/css.lua	2018-10-25 11:04:00.000000000 +0800
+++ textadept/lexers/css.lua	2018-10-31 09:51:41.172150400 +0800
@@ -38,7 +38,12 @@
   pause-after pause cue-before cue-after cue play-during azimuth elevation
   speech-rate voice-family pitch pitch-range stress richness speak-punctuation
   speak-numeral
-]]))
+  -- CSS 3.
+  flex flex-basis flex-direction flex-flow flex-grow flex-shrink flex-wrap
+  align-content align-items align-self justify-content order border-radius
+  transition transform box-shadow filter opacity resize word-break word-wrap
+  box-sizing animation
+]] * #(P(':'))))
 lex:add_style('property', lexer.STYLE_KEYWORD)
 
 -- Values.
@@ -74,6 +79,8 @@
   center-left center-right far-right right-side behind leftwards rightwards
   below level above higher lower x-slow slow medium fast x-fast faster slower
   male female child x-low low high x-high code digits continous
+  -- CSS 3.
+  flex
 ]]))
 lex:add_style('value', lexer.STYLE_CONSTANT)
 
@@ -154,7 +161,7 @@
 
 -- At rule.
 lex:add_rule('at_rule', token('at_rule', P('@') * word_match[[
-  charset font-face media page import namespace
+  charset font-face media page import namespace keyframes
 ]]))
 lex:add_style('at_rule', lexer.STYLE_PREPROCESSOR)
 
diff --strip-trailing-cr -ruNa textadept_old/lexers/html.lua textadept/lexers/html.lua
--- textadept_old/lexers/html.lua	2018-10-25 11:04:00.000000000 +0800
+++ textadept/lexers/html.lua	2018-10-31 10:11:27.547150400 +0800
@@ -21,26 +21,33 @@
 lex:add_style('doctype', lexer.STYLE_COMMENT)
 
 -- Elements.
-local known_element = token('element', '<' * P('/')^-1 * word_match([[
-  a abbr address area article aside audio b base bdi bdo blockquote body br
-  button canvas caption cite code col colgroup content data datalist dd
-  decorator del details dfn div dl dt element em embed fieldset figcaption
-  figure footer form h1 h2 h3 h4 h5 h6 head header hr html i iframe img input
-  ins kbd keygen label legend li link main map mark menu menuitem meta meter nav
-  noscript object ol optgroup option output p param pre progress q rp rt ruby s
-  samp script section select shadow small source spacer span strong style sub
-  summary sup table tbody td template textarea tfoot th thead time title tr
-  track u ul var video wbr
+local single_element = token('single_element', '<' * P('/')^-1 * word_match([[
+  area base br col command embed hr img input keygen link meta param source
+  track wbr
 ]], true))
-local unknown_element = token('unknown_element', '<' * P('/')^-1 * lexer.word)
+
+local paired_element = token('paired_element', '<' * P('/')^-1 * word_match([[
+  a abbr address article aside audio b bdi bdo blockquote body button canvas
+  caption cite code colgroup content data datalist dd decorator del details
+  dfn div dl dt element em fieldset figcaption figure footer form h1 h2 h3 h4
+  h5 h6 head header html i iframe ins kbd label legend li main map mark menu
+  menuitem meter nav noscript object ol optgroup option output p pre progress
+  q rp rt ruby s samp script section select shadow small spacer span strong
+  style sub summary sup table tbody td template textarea tfoot th thead time
+  title tr u ul var video
+]], true))
+local known_element = single_element + paired_element
+local unknown_element = token('unknown_element', '<' * P('/')^-1 * (lexer.alnum + '-')^1)
 local element = known_element + unknown_element
 lex:add_rule('element', element)
-lex:add_style('element', lexer.STYLE_KEYWORD)
+lex:add_style('single_element', lexer.STYLE_KEYWORD)
+lex:add_style('paired_element', lexer.STYLE_KEYWORD)
 lex:add_style('unknown_element', lexer.STYLE_KEYWORD..',italics')
 
 -- Closing tags.
-local tag_close = token('element', P('/')^-1 * '>')
+local tag_close = token('tag_close', P('/')^-1 * '>')
 lex:add_rule('tag_close', tag_close)
+lex:add_style('tag_close', lexer.STYLE_KEYWORD)
 
 -- Attributes.
 local known_attribute = token('attribute', word_match([[
@@ -56,8 +63,9 @@
   shape size sizes span spellcheck src srcdoc srclang start step style summary
   tabindex target title type usemap value width wrap
 ]], true) + ((P('data-') + 'aria-') * (lexer.alnum + '-')^1))
-local unknown_attribute = token('unknown_attribute', lexer.word)
-local attribute = (known_attribute + unknown_attribute) * #(lexer.space^0 * '=')
+local unknown_attribute = token('unknown_attribute', (lexer.alnum + '-')^1)
+local attribute = known_attribute * #((lexer.space^0 * '=')^-1) + unknown_attribute
+                 * #(lexer.space^0 * '=')
 lex:add_rule('attribute', attribute)
 lex:add_style('attribute', lexer.STYLE_TYPE)
 lex:add_style('unknown_attribute', lexer.STYLE_TYPE..',italics')
@@ -92,30 +100,29 @@
 
 -- Fold points.
 local function disambiguate_lt(text, pos, line, s)
-  return not line:find('^</', s) and 1 or -1
+  if line:find('/>$', s) then
+    return 0
+  elseif line:find('^</', s) then
+    return -1
+  else
+    return 1
+  end
 end
-lex:add_fold_point('element', '<', disambiguate_lt)
-lex:add_fold_point('element', '/>', -1)
+lex:add_fold_point('paired_element', '<', disambiguate_lt)
 lex:add_fold_point('unknown_element', '<', disambiguate_lt)
-lex:add_fold_point('unknown_element', '/>', -1)
 lex:add_fold_point(lexer.COMMENT, '<!--', '-->')
 
 -- Tags that start embedded languages.
 -- Export these patterns for proxy lexers (e.g. ASP) that need them.
 lex.embed_start_tag = element *
-                      (ws * attribute * ws^-1 * equals * ws^-1 * string)^0 *
+                      (ws * attribute * (ws^-1 * equals * ws^-1 * string)^-1)^0 *
                       ws^-1 * tag_close
 lex.embed_end_tag = element * tag_close
 
 -- Embedded CSS (<style type="text/css"> ... </style>).
 local css = lexer.load('css')
 local style_element = word_match([[style]], true)
-local css_start_rule = #(P('<') * style_element *
-                         ('>' + P(function(input, index)
-  if input:find('^%s+type%s*=%s*(["\'])text/css%1', index) then
-    return index
-  end
-end))) * lex.embed_start_tag
+local css_start_rule = #(P('<') * style_element) * lex.embed_start_tag
 local css_end_rule = #('</' * style_element * ws^-1 * '>') * lex.embed_end_tag
 lex:embed(css, css_start_rule, css_end_rule)
 
@@ -147,3 +154,4 @@
 lex:embed(cs, cs_start_rule, cs_end_rule)
 
 return lex
+
diff --strip-trailing-cr -ruNa textadept_old/lexers/javascript.lua textadept/lexers/javascript.lua
--- textadept_old/lexers/javascript.lua	2018-10-25 11:04:00.000000000 +0800
+++ textadept/lexers/javascript.lua	2018-10-08 10:56:28.817393700 +0800
@@ -44,7 +44,8 @@
 
 -- Fold points.
 lex:add_fold_point(lexer.OPERATOR, '{', '}')
-lex:add_fold_point(lexer.COMMENT, '/*', '*/')
+lex:add_fold_point(lexer.OPERATOR, '[', ']')
+--lex:add_fold_point(lexer.COMMENT, '/*', '*/')
 lex:add_fold_point(lexer.COMMENT, '//', lexer.fold_line_comments('//'))
 
 return lex
diff --strip-trailing-cr -ruNa textadept_old/lexers/lexer.lua textadept/lexers/lexer.lua
--- textadept_old/lexers/lexer.lua	2018-10-25 11:04:00.000000000 +0800
+++ textadept/lexers/lexer.lua	2018-10-08 12:45:33.247082700 +0800
@@ -1596,9 +1596,10 @@
 M.punct = lpeg_R('!/', ':@', '[\'', '{~')
 M.space = lpeg_S('\t\v\f\n\r ')
 
-M.newline = lpeg_S('\r\n\f')^1
-M.nonnewline = 1 - M.newline
-M.nonnewline_esc = 1 - (M.newline + '\\') + '\\' * M.any
+M.newline = lpeg_P('\r')^-1 * lpeg_S('\n\f')
+M.raw_newline = lpeg_S('\r\n\f')
+M.nonnewline = 1 - M.raw_newline
+M.nonnewline_esc = 1 - (M.raw_newline + '\\') + '\\' * M.any
 
 M.dec_num = M.digit^1
 M.hex_num = '0' * lpeg_S('xX') * M.xdigit^1
diff --strip-trailing-cr -ruNa textadept_old/lexers/markdown.lua textadept/lexers/markdown.lua
--- textadept_old/lexers/markdown.lua	2018-10-25 11:04:00.000000000 +0800
+++ textadept/lexers/markdown.lua	2018-10-11 09:15:28.805343500 +0800
@@ -17,7 +17,7 @@
              token('h1', lexer.starts_line('#') * lexer.nonnewline^0))
 local font_size = lexer.property_int['fontsize'] > 0 and
                   lexer.property_int['fontsize'] or 10
-local hstyle = 'fore:$(color.red)'
+local hstyle = lexer.STYLE_FUNCTION
 lex:add_style('h6', hstyle)
 lex:add_style('h5', hstyle..',size:'..(font_size + 1))
 lex:add_style('h4', hstyle..',size:'..(font_size + 2))
@@ -38,21 +38,27 @@
                                    S(' \t')))
 lex:add_style('list', lexer.STYLE_CONSTANT)
 
-lex:add_rule('blockcode',
+lex:add_rule('block_code',
              token('code', lexer.starts_line(P(' ')^4 + P('\t')) * -P('<') *
-                           lexer.nonnewline^0 * lexer.newline^-1))
+                           lexer.nonnewline^0 * lexer.newline^-1) +
+             token('code', lexer.starts_line(P('```')) * (lexer.any - '```')^0 *
+                           P('```') * lexer.newline))
+lex:add_rule('inline_code',
+             token('code', lexer.starts_line(P('``')) * (lexer.any - '``')^0 * P('``')^-1 +
+                           lexer.delimited_range('`', false, true)))
 lex:add_style('code', lexer.STYLE_EMBEDDED..',eolfilled')
 
 lex:add_rule('hr',
              token('hr',
                    lpeg.Cmt(lexer.starts_line(S(' \t')^0 * lpeg.C(S('*-_'))),
                             function(input, index, c)
-                              local line = input:match('[^\n]*', index)
+                              local line = input:match('[^\r\n]*', index)
                               line = line:gsub('[ \t]', '')
                               if line:find('[^'..c..']') or #line < 2 then
                                 return nil
                               end
-                              return (input:find('\n', index) or #input) + 1
+                              _, end_index = input:find('\r?\n', index)
+                              return (end_index and end_index or #input) + 1
                             end)))
 lex:add_style('hr', 'back:$(color.black),eolfilled')
 
@@ -70,7 +76,7 @@
                                        lexer.delimited_range("'", false, true) +
                                        lexer.delimited_range('()')))^-1)
 lex:add_style('link_label', lexer.STYLE_LABEL)
-lex:add_style('link_url', 'underlined')
+lex:add_style('link_url', lexer.STYLE_CONSTANT .. ',underlined')
 
 lex:add_rule('link',
              token('link', P('!')^-1 * lexer.delimited_range('[]') *
@@ -78,19 +84,17 @@
                             (S(' \t')^1 *
                              lexer.delimited_range('"', false, true))^-1 * ')' +
                             S(' \t')^0 * lexer.delimited_range('[]')) +
-                           P('http://') * (lexer.any - lexer.space)^1))
+                           P('http') * P('s')^-1 * P('://') * (lexer.any - lexer.space)^1))
 lex:add_style('link', 'underlined')
 
 lex:add_rule('strong', token('strong', P('**') * (lexer.any - '**')^0 *
                                        P('**')^-1 +
                                        P('__') * (lexer.any - '__')^0 *
                                        P('__')^-1))
-lex:add_style('strong', 'bold')
-lex:add_rule('em', token('em', lexer.delimited_range('*', true) +
-                               lexer.delimited_range('_', true)))
-lex:add_style('em', 'italics')
-lex:add_rule('code', token('code', P('``') * (lexer.any - '``')^0 * P('``')^-1 +
-                                   lexer.delimited_range('`', true, true)))
+lex:add_style('strong', lexer.STYLE_CLASS .. ',bold')
+lex:add_rule('em', token('em', lexer.delimited_range('*', true, true) +
+                               lexer.delimited_range('_', true, true)))
+lex:add_style('em', lexer.STYLE_KEYWORD .. ',italics')
 
 -- Embedded HTML.
 local html = lexer.load('html')
diff --strip-trailing-cr -ruNa textadept_old/modules/textadept/editing.lua textadept/modules/textadept/editing.lua
--- textadept_old/modules/textadept/editing.lua	2018-10-25 11:02:25.000000000 +0800
+++ textadept/modules/textadept/editing.lua	2018-10-31 10:47:21.022150400 +0800
@@ -245,18 +245,25 @@
     local p = buffer.line_indent_position[line]
     if buffer:text_range(p, p + #prefix) == prefix then
       buffer:delete_range(p, #prefix)
+      if buffer:text_range(p, p + 1) == ' ' then
+      buffer:delete_range(p, 1)
+      end
       if suffix ~= '' then
-        p = buffer.line_end_position[line]
-        buffer:delete_range(p - #suffix, #suffix)
-        if line == s then anchor = anchor - #suffix end
-        if line == e then pos = pos - #suffix end
+      p = buffer.line_end_position[line]
+      local one_space = 0
+      if buffer:text_range(p - #suffix - 1, p - #suffix) == ' ' then
+        one_space = 1
+      end
+      buffer:delete_range(p - #suffix - one_space, #suffix + one_space)
+      if line == s then anchor = anchor - #suffix - one_space end
+      if line == e then pos = pos - #suffix - one_space end
       end
     else
-      buffer:insert_text(p, prefix)
+      buffer:insert_text(p, prefix .. ' ')
       if suffix ~= '' then
-        buffer:insert_text(buffer.line_end_position[line], suffix)
-        if line == s then anchor = anchor + #suffix end
-        if line == e then pos = pos + #suffix end
+      buffer:insert_text(buffer.line_end_position[line], ' ' .. suffix)
+      if line == s then anchor = anchor + #suffix + 1 end
+      if line == e then pos = pos + #suffix + 1 end
       end
     end
   end
@@ -541,7 +548,7 @@
       return
     end
   end
-  buffer:replace_target(output:iconv('UTF-8', _CHARSET))
+  buffer:replace_target(output)
   if s ~= e then
     buffer:set_sel(buffer.target_start, buffer.target_end)
   else
diff --strip-trailing-cr -ruNa textadept_old/modules/textadept/file_types.lua textadept/modules/textadept/file_types.lua
--- textadept_old/modules/textadept/file_types.lua	2018-10-25 11:02:25.000000000 +0800
+++ textadept/modules/textadept/file_types.lua	2018-10-26 09:09:47.497135300 +0800
@@ -23,7 +23,7 @@
 -- matched against the file's extension.
 -- @class table
 -- @name extensions
-M.extensions = {--[[Actionscript]]as='actionscript',asc='actionscript',--[[Ada]]adb='ada',ads='ada',--[[ANTLR]]g='antlr',g4='antlr',--[[APDL]]ans='apdl',inp='apdl',mac='apdl',--[[APL]]apl='apl',--[[Applescript]]applescript='applescript',--[[ASM]]asm='asm',ASM='asm',s='asm',S='asm',--[[ASP]]asa='asp',asp='asp',hta='asp',--[[AutoIt]]au3='autoit',a3x='autoit',--[[AWK]]awk='awk',--[[Batch]]bat='batch',cmd='batch',--[[BibTeX]]bib='bibtex',--[[Boo]]boo='boo',--[[C#]]cs='csharp',--[[C/C++]]c='ansi_c',cc='cpp',C='ansi_c',cpp='cpp',cxx='cpp',['c++']='cpp',h='cpp',hh='cpp',hpp='cpp',hxx='cpp',['h++']='cpp',--[[ChucK]]ck='chuck',--[[CMake]]cmake='cmake',['cmake.in']='cmake',ctest='cmake',['ctest.in']='cmake',--[[CoffeeScript]]coffee='coffeescript',--[[Crystal]]cr='crystal',--[[CSS]]css='css',--[[CUDA]]cu='cuda',cuh='cuda',--[[D]]d='dmd',di='dmd',--[[Dart]]dart='dart',--[[Desktop]]desktop='desktop',--[[diff]]diff='diff',patch='diff',--[[Dockerfile]]Dockerfile='dockerfile',--[[dot]]dot='dot',--[[Eiffel]]e='eiffel',eif='eiffel',--[[Elixir]]ex='elixir',exs='elixir',--[[Erlang]]erl='erlang',hrl='erlang',--[[F#]]fs='fsharp',--[[Faust]]dsp='faust',--[[Fish]]fish='fish',--[[Forth]]forth='forth',frt='forth',fs='forth',--[[Fortran]]f='fortran',['for']='fortran',ftn='fortran',fpp='fortran',f77='fortran',f90='fortran',f95='fortran',f03='fortran',f08='fortran',--[[Gap]]g='gap',gd='gap',gi='gap',gap='gap',--[[Gettext]]po='gettext',pot='gettext',--[[Gherkin]]feature='gherkin',--[[GLSL]]glslf='glsl',glslv='glsl',--[[GNUPlot]]dem='gnuplot',plt='gnuplot',--[[Go]]go='go',--[[Groovy]]groovy='groovy',gvy='groovy',--[[Gtkrc]]gtkrc='gtkrc',--[[Haskell]]hs='haskell',--[[HTML]]htm='html',html='html',shtm='html',shtml='html',xhtml='html',--[[Icon]]icn='icon',--[[IDL]]idl='idl',odl='idl',--[[Inform]]inf='inform',ni='inform',--[[ini]]cfg='ini',cnf='ini',inf='ini',ini='ini',reg='ini',--[[Io]]io='io_lang',--[[Java]]bsh='java',java='java',--[[Javascript]]js='javascript',jsfl='javascript',--[[JSON]]json='json',--[[JSP]]jsp='jsp',--[[LaTeX]]bbl='latex',dtx='latex',ins='latex',ltx='latex',tex='latex',sty='latex',--[[Ledger]]ledger='ledger',journal='ledger',--[[LESS]]less='less',--[[LilyPond]]lily='lilypond',ly='lilypond',--[[Lisp]]cl='lisp',el='lisp',lisp='lisp',lsp='lisp',--[[Literate Coffeescript]]litcoffee='litcoffee',--[[Logtalk]]lgt='logtalk',--[[Lua]]lua='lua',--[[Makefile]]GNUmakefile='makefile',iface='makefile',mak='makefile',makefile='makefile',Makefile='makefile',--[[Man]]['1']='man',['2']='man',['3']='man',['4']='man',['5']='man',['6']='man',['7']='man',['8']='man',['9']='man',['1x']='man',['2x']='man',['3x']='man',['4x']='man',['5x']='man',['6x']='man',['7x']='man',['8x']='man',['9x']='man',--[[Markdown]]md='markdown',--[[MoonScript]]moon='moonscript',--[[Myrddin]]myr='myrddin',--[[Nemerle]]n='nemerle',--[[Nim]]nim='nim',--[[NSIS]]nsh='nsis',nsi='nsis',nsis='nsis',--[[Objective C]]m='objective_c',mm='objective_c',objc='objective_c',--[[OCaml]]caml='caml',ml='caml',mli='caml',mll='caml',mly='caml',--[[Pascal]]dpk='pascal',dpr='pascal',p='pascal',pas='pascal',--[[Perl]]al='perl',perl='perl',pl='perl',pm='perl',pod='perl',--[[PHP]]inc='php',php='php',php3='php',php4='php',phtml='php',--[[PICO-8]]p8='pico',--[[Pike]]pike='pike',pmod='pike',--[[PKGBUILD]]PKGBUILD='pkgbuild',--[[Postscript]]eps='ps',ps='ps',--[[PowerShell]]ps1='powershell',--[[Prolog]]prolog='prolog',--[[Properties]]props='props',properties='props',--[[Protobuf]]proto='protobuf',--[[Pure]]pure='pure',--[[Python]]sc='python',py='python',pyw='python',--[[R]]R='rstats',Rout='rstats',Rhistory='rstats',Rt='rstats',['Rout.save']='rstats',['Rout.fail']='rstats',S='rstats',--[[REBOL]]r='rebol',reb='rebol',--[[reST]]rst='rest',--[[Rexx]]orx='rexx',rex='rexx',--[[RHTML]]erb='rhtml',rhtml='rhtml',--[[Ruby]]Rakefile='ruby',rake='ruby',rb='ruby',rbw='ruby',--[[Rust]]rs='rust',--[[Sass CSS]]sass='sass',scss='sass',--[[Scala]]scala='scala',--[[Scheme]]sch='scheme',scm='scheme',--[[Shell]]bash='bash',bashrc='bash',bash_profile='bash',configure='bash',csh='bash',sh='bash',zsh='bash',--[[Smalltalk]]changes='smalltalk',st='smalltalk',sources='smalltalk',--[[SML]]sml='sml',fun='sml',sig='sml',--[[SNOBOL4]]sno='snobol4',SNO='snobol4',--[[SQL]]ddl='sql',sql='sql',--[[TaskPaper]]taskpaper='taskpaper',--[[Tcl]]tcl='tcl',tk='tcl',--[[Texinfo]]texi='texinfo',--[[TOML]]toml='toml',--[[Vala]]vala='vala',--[[vCard]]vcf='vcard',vcard='vcard',--[[Verilog]]v='verilog',ver='verilog',--[[VHDL]]vh='vhdl',vhd='vhdl',vhdl='vhdl',--[[Visual Basic]]asa='vb',bas='vb',cls='vb',ctl='vb',dob='vb',dsm='vb',dsr='vb',frm='vb',pag='vb',vb='vb',vba='vb',vbs='vb',--[[WSF]]wsf='wsf',--[[XML]]dtd='xml',svg='xml',xml='xml',xsd='xml',xsl='xml',xslt='xml',xul='xml',--[[Xtend]]xtend='xtend',--[[YAML]]yaml='yaml'}
+M.extensions = {--[[Actionscript]]as='actionscript',asc='actionscript',--[[Ada]]adb='ada',ads='ada',--[[ANTLR]]g='antlr',g4='antlr',--[[APDL]]ans='apdl',inp='apdl',mac='apdl',--[[APL]]apl='apl',--[[Applescript]]applescript='applescript',--[[ASM]]asm='asm',ASM='asm',s='asm',S='asm',--[[ASP]]asa='asp',asp='asp',hta='asp',--[[AutoIt]]au3='autoit',a3x='autoit',--[[AWK]]awk='awk',--[[Batch]]bat='batch',cmd='batch',--[[BibTeX]]bib='bibtex',--[[Boo]]boo='boo',--[[C#]]cs='csharp',--[[C/C++]]c='ansi_c',cc='cpp',C='ansi_c',cpp='cpp',cxx='cpp',['c++']='cpp',h='cpp',hh='cpp',hpp='cpp',hxx='cpp',['h++']='cpp',--[[ChucK]]ck='chuck',--[[CMake]]cmake='cmake',['cmake.in']='cmake',ctest='cmake',['ctest.in']='cmake',--[[CoffeeScript]]coffee='coffeescript',--[[Crystal]]cr='crystal',--[[CSS]]css='css',--[[CUDA]]cu='cuda',cuh='cuda',--[[D]]d='dmd',di='dmd',--[[Dart]]dart='dart',--[[Desktop]]desktop='desktop',--[[diff]]diff='diff',patch='diff',--[[Dockerfile]]Dockerfile='dockerfile',--[[dot]]dot='dot',--[[Eiffel]]e='eiffel',eif='eiffel',--[[Elixir]]ex='elixir',exs='elixir',--[[Erlang]]erl='erlang',hrl='erlang',--[[F#]]fs='fsharp',--[[Faust]]dsp='faust',--[[Fish]]fish='fish',--[[Forth]]forth='forth',frt='forth',fs='forth',--[[Fortran]]f='fortran',['for']='fortran',ftn='fortran',fpp='fortran',f77='fortran',f90='fortran',f95='fortran',f03='fortran',f08='fortran',--[[Gap]]g='gap',gd='gap',gi='gap',gap='gap',--[[Gettext]]po='gettext',pot='gettext',--[[Gherkin]]feature='gherkin',--[[GLSL]]glslf='glsl',glslv='glsl',--[[GNUPlot]]dem='gnuplot',plt='gnuplot',--[[Go]]go='go',--[[Groovy]]groovy='groovy',gvy='groovy',--[[Gtkrc]]gtkrc='gtkrc',--[[Haskell]]hs='haskell',--[[HTML]]htm='html',html='html',shtm='html',shtml='html',xhtml='html',vue='html',--[[Icon]]icn='icon',--[[IDL]]idl='idl',odl='idl',--[[Inform]]inf='inform',ni='inform',--[[ini]]cfg='ini',cnf='ini',inf='ini',ini='ini',reg='ini',--[[Io]]io='io_lang',--[[Java]]bsh='java',java='java',--[[Javascript]]js='javascript',jsfl='javascript',--[[JSON]]json='json',--[[JSP]]jsp='jsp',--[[LaTeX]]bbl='latex',dtx='latex',ins='latex',ltx='latex',tex='latex',sty='latex',--[[Ledger]]ledger='ledger',journal='ledger',--[[LESS]]less='less',--[[LilyPond]]lily='lilypond',ly='lilypond',--[[Lisp]]cl='lisp',el='lisp',lisp='lisp',lsp='lisp',--[[Literate Coffeescript]]litcoffee='litcoffee',--[[Logtalk]]lgt='logtalk',--[[Lua]]lua='lua',--[[Makefile]]GNUmakefile='makefile',iface='makefile',mak='makefile',makefile='makefile',Makefile='makefile',--[[Man]]['1']='man',['2']='man',['3']='man',['4']='man',['5']='man',['6']='man',['7']='man',['8']='man',['9']='man',['1x']='man',['2x']='man',['3x']='man',['4x']='man',['5x']='man',['6x']='man',['7x']='man',['8x']='man',['9x']='man',--[[Markdown]]md='markdown',--[[MoonScript]]moon='moonscript',--[[Myrddin]]myr='myrddin',--[[Nemerle]]n='nemerle',--[[Nim]]nim='nim',--[[NSIS]]nsh='nsis',nsi='nsis',nsis='nsis',--[[Objective C]]m='objective_c',mm='objective_c',objc='objective_c',--[[OCaml]]caml='caml',ml='caml',mli='caml',mll='caml',mly='caml',--[[Pascal]]dpk='pascal',dpr='pascal',p='pascal',pas='pascal',--[[Perl]]al='perl',perl='perl',pl='perl',pm='perl',pod='perl',--[[PHP]]inc='php',php='php',php3='php',php4='php',phtml='php',--[[PICO-8]]p8='pico',--[[Pike]]pike='pike',pmod='pike',--[[PKGBUILD]]PKGBUILD='pkgbuild',--[[Postscript]]eps='ps',ps='ps',--[[PowerShell]]ps1='powershell',--[[Prolog]]prolog='prolog',--[[Properties]]props='props',properties='props',--[[Protobuf]]proto='protobuf',--[[Pure]]pure='pure',--[[Python]]sc='python',py='python',pyw='python',--[[R]]R='rstats',Rout='rstats',Rhistory='rstats',Rt='rstats',['Rout.save']='rstats',['Rout.fail']='rstats',S='rstats',--[[REBOL]]r='rebol',reb='rebol',--[[reST]]rst='rest',--[[Rexx]]orx='rexx',rex='rexx',--[[RHTML]]erb='rhtml',rhtml='rhtml',--[[Ruby]]Rakefile='ruby',rake='ruby',rb='ruby',rbw='ruby',--[[Rust]]rs='rust',--[[Sass CSS]]sass='sass',scss='sass',--[[Scala]]scala='scala',--[[Scheme]]sch='scheme',scm='scheme',--[[Shell]]bash='bash',bashrc='bash',bash_profile='bash',configure='bash',csh='bash',sh='bash',zsh='bash',--[[Smalltalk]]changes='smalltalk',st='smalltalk',sources='smalltalk',--[[SML]]sml='sml',fun='sml',sig='sml',--[[SNOBOL4]]sno='snobol4',SNO='snobol4',--[[SQL]]ddl='sql',sql='sql',--[[TaskPaper]]taskpaper='taskpaper',--[[Tcl]]tcl='tcl',tk='tcl',--[[Texinfo]]texi='texinfo',--[[TOML]]toml='toml',--[[Vala]]vala='vala',--[[vCard]]vcf='vcard',vcard='vcard',--[[Verilog]]v='verilog',ver='verilog',--[[VHDL]]vh='vhdl',vhd='vhdl',vhdl='vhdl',--[[Visual Basic]]asa='vb',bas='vb',cls='vb',ctl='vb',dob='vb',dsm='vb',dsr='vb',frm='vb',pag='vb',vb='vb',vba='vb',vbs='vb',--[[WSF]]wsf='wsf',--[[XML]]dtd='xml',svg='xml',xml='xml',xsd='xml',xsl='xml',xslt='xml',xul='xml',--[[Xtend]]xtend='xtend',--[[YAML]]yaml='yaml'}
 
 ---
 -- Map of first-line patterns to their associated lexer names.
diff --strip-trailing-cr -ruNa textadept_old/modules/textadept/keys.lua textadept/modules/textadept/keys.lua
--- textadept_old/modules/textadept/keys.lua	2018-10-25 11:02:25.000000000 +0800
+++ textadept/modules/textadept/keys.lua	2018-10-29 08:13:13.173998700 +0800
@@ -550,7 +550,6 @@
 keys['\b'], keys['s\b'] = buffer.delete_back, buffer.delete_back
 keys[not OSX and 'c\b' or 'm\b'] = buffer.del_word_left
 keys[not OSX and 'cs\b' or 'ms\b'] = buffer.del_line_left
-keys['\t'], keys['s\t'] = buffer.tab, buffer.back_tab
 
 -- Modes.
 keys.filter_through = {
diff --strip-trailing-cr -ruNa textadept_old/share/themes/MS-Windows/gtk-2.0/gtkrc textadept/share/themes/MS-Windows/gtk-2.0/gtkrc
--- textadept_old/share/themes/MS-Windows/gtk-2.0/gtkrc	2018-10-25 11:02:38.000000000 +0800
+++ textadept/share/themes/MS-Windows/gtk-2.0/gtkrc	2018-10-26 09:05:10.620297200 +0800
@@ -64,3 +64,10 @@
 
 widget_class "*TreeView*ComboBox*" style "msw-combobox-thickness"
 widget_class "*ComboBox*GtkFrame*" style "msw-combobox-thickness"
+
+style "wqyfont"
+{
+  font_name = "WenQuanYi Micro Hei 10"
+}
+
+widget "*" style "wqyfont"
diff --strip-trailing-cr -ruNa textadept_old/themes/light.lua textadept/themes/light.lua
--- textadept_old/themes/light.lua	2018-10-25 11:02:25.000000000 +0800
+++ textadept/themes/light.lua	2018-09-10 12:31:46.319415300 +0800
@@ -16,7 +16,7 @@
 --property['color.grey_white'] = 0xB3B3B3
 property['color.dark_white'] = 0xCCCCCC
 property['color.white'] = 0xE6E6E6
---property['color.light_white'] = 0xFFFFFF
+property['color.light_white'] = 0xFFFFFF
 
 -- Dark colors.
 --property['color.dark_red'] = 0x1A1A66
@@ -61,7 +61,7 @@
 
 -- Predefined styles.
 property['style.default'] = 'font:$(font),size:$(fontsize),'..
-                            'fore:$(color.light_black),back:$(color.white)'
+                            'fore:$(color.light_black),back:$(color.light_white)'
 property['style.linenumber'] = 'fore:$(color.grey),back:$(color.white)'
 --property['style.controlchar'] = ''
 property['style.indentguide'] = 'fore:$(color.dark_white)'
@@ -98,7 +98,7 @@
 buffer:set_sel_back(true, property_int['color.light_grey'])
 --buffer.sel_alpha =
 buffer.caret_fore = property_int['color.grey_black']
-buffer.caret_line_back = property_int['color.dark_white']
+buffer.caret_line_back = property_int['color.white']
 --buffer.caret_line_back_alpha =
 
 -- Fold Margin.
